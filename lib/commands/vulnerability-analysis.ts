import type { Command } from "./types"

export const vulnerabilityAnalysisCommands: Command[] = [
  {
    name: "nikto",
    description: "Web server scanner",
    explanation: "Scans web servers for dangerous files, outdated software, and other vulnerabilities.",
    examples: {
      simple: {
        command: "nikto -h example.com",
        description: "Basic scan of a web server.",
      },
      intermediate: {
        command: "nikto -h example.com -ssl -port 443",
        description: "Scan a web server using SSL on port 443.",
      },
      advanced: {
        command: "nikto -h example.com -ssl -port 443 -Tuning x6 -output nikto_results.html -Format htm",
        description: "Advanced scan focusing on injection and XSS vulnerabilities with HTML output.",
      },
    },
    options: [
      {
        name: "h",
        type: "string",
        description: "Target host",
        placeholder: "example.com",
        required: true,
      },
      {
        name: "port",
        type: "string",
        description: "Port to use (default 80)",
        placeholder: "443",
        common: true,
      },
      {
        name: "ssl",
        type: "boolean",
        description: "Use SSL",
        common: true,
      },
      {
        name: "output",
        type: "string",
        description: "Write output to file",
        placeholder: "nikto.txt",
        common: true,
      },
    ],
    documentation: "https://cirt.net/Nikto2",
  },
  {
    name: "wpscan",
    description: "WordPress vulnerability scanner",
    explanation: "Scans WordPress installations for security issues, vulnerable plugins, and themes.",
    examples: {
      simple: {
        command: "wpscan --url http://example.com",
        description: "Basic scan of a WordPress site.",
      },
      intermediate: {
        command: "wpscan --url http://example.com --enumerate u,p",
        description: "Scan a WordPress site and enumerate users and plugins.",
      },
      advanced: {
        command: "wpscan --url http://example.com --enumerate u,p,t --api-token YOUR_TOKEN --random-user-agent",
        description: "Comprehensive scan with user, plugin, and theme enumeration using the WPScan API.",
      },
    },
    options: [
      {
        name: "url",
        type: "string",
        description: "The URL of the WordPress site",
        placeholder: "http://example.com",
        required: true,
      },
      {
        name: "enumerate",
        type: "string",
        description: "Enumeration options (u for users, p for plugins)",
        placeholder: "u,p",
        common: true,
      },
      {
        name: "api-token",
        type: "string",
        description: "WPScan API Token",
        placeholder: "YOUR_TOKEN",
        common: false,
      },
      {
        name: "random-user-agent",
        type: "boolean",
        description: "Use a random user-agent for each scan",
        common: false,
      },
    ],
    documentation: "https://github.com/wpscanteam/wpscan",
  },
  {
    name: "sqlmap",
    description: "Automatic SQL injection tool",
    explanation: "Automates the detection and exploitation of SQL injection vulnerabilities.",
    examples: {
      simple: {
        command: 'sqlmap -u "http://example.com/page.php?id=1"',
        description: "Basic SQL injection test on a URL parameter.",
      },
      intermediate: {
        command: 'sqlmap -u "http://example.com/page.php?id=1" --dbms=mysql --dump',
        description: "SQL injection test specifying MySQL as the database and dumping the database.",
      },
      advanced: {
        command: 'sqlmap -u "http://example.com/page.php?id=1" --dbms=mysql --level=5 --risk=3 --dump-all --batch',
        description: "Aggressive SQL injection test with maximum level and risk, dumping all databases.",
      },
    },
    options: [
      {
        name: "u",
        type: "string",
        description: "Target URL",
        placeholder: "http://example.com/page.php?id=1",
        required: true,
      },
      {
        name: "p",
        type: "string",
        description: "Testable parameter(s)",
        placeholder: "id",
        common: true,
      },
      {
        name: "dbms",
        type: "string",
        description: "Force DBMS type",
        placeholder: "mysql",
        common: true,
      },
      {
        name: "cookie",
        type: "string",
        description: "HTTP Cookie header value",
        placeholder: "PHPSESSID=1234",
        common: true,
      },
      {
        name: "data",
        type: "string",
        description: "Data string to be sent through POST",
        placeholder: "id=1&user=admin",
        common: true,
      },
      {
        name: "level",
        type: "string",
        description: "Level of tests (1-5, higher is more tests)",
        placeholder: "3",
        common: true,
      },
      {
        name: "risk",
        type: "string",
        description: "Risk of tests (1-3, higher is more dangerous)",
        placeholder: "1",
        common: true,
      },
      {
        name: "dump",
        type: "boolean",
        description: "Dump database table entries",
        common: true,
      },
      {
        name: "dump-all",
        type: "boolean",
        description: "Dump all database tables entries",
        common: false,
      },
      {
        name: "batch",
        type: "boolean",
        description: "Never ask for user input, use default behavior",
        common: true,
      },
      {
        name: "forms",
        type: "boolean",
        description: "Parse and test forms on target URL",
        common: false,
      },
      {
        name: "crawl",
        type: "string",
        description: "Crawl the website starting from the target URL",
        placeholder: "3",
        common: false,
      },
      {
        name: "os-shell",
        type: "boolean",
        description: "Prompt for an interactive OS shell",
        common: false,
      },
      {
        name: "random-agent",
        type: "boolean",
        description: "Use a random HTTP User-Agent header",
        common: true,
      },
      {
        name: "threads",
        type: "string",
        description: "Max number of concurrent HTTP requests",
        placeholder: "10",
        common: false,
      },
    ],
    documentation: "https://github.com/sqlmapproject/sqlmap/wiki",
  },
  {
    name: "openvas",
    description: "Open Vulnerability Assessment Scanner",
    explanation: "Comprehensive vulnerability scanner that identifies security issues in systems and networks.",
    examples: {
      simple: {
        command: "openvas --target 192.168.1.1",
        description: "Basic vulnerability scan of a single IP address.",
      },
      intermediate: {
        command: 'openvas --target 192.168.1.1 --scan-config "Full and fast"',
        description: "Vulnerability scan using the 'Full and fast' scan configuration.",
      },
      advanced: {
        command: 'openvas --target 192.168.1.0/24 --scan-config "Full and very deep" --report-format PDF',
        description: "Comprehensive vulnerability scan of a network with detailed reporting.",
      },
    },
    options: [
      {
        name: "target",
        type: "string",
        description: "Target IP or hostname",
        placeholder: "192.168.1.1",
        required: true,
      },
      {
        name: "scan-config",
        type: "string",
        description: "Scan configuration to use",
        placeholder: "Full and fast",
        common: true,
      },
      {
        name: "report-format",
        type: "string",
        description: "Format for the report",
        placeholder: "PDF",
        common: true,
      },
    ],
    documentation: "https://www.openvas.org/",
  },
]

