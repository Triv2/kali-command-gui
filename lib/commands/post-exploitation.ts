import type { Command } from "./types"

export const postExploitationCommands: Command[] = [
  {
    name: "mimikatz",
    description: "Windows credential extraction tool",
    explanation: "Extracts plaintext passwords, hashes, and Kerberos tickets from memory on Windows systems.",
    examples: {
      simple: {
        command: 'mimikatz "sekurlsa::logonpasswords"',
        description: "Extract logon passwords from memory.",
      },
      intermediate: {
        command: 'mimikatz "privilege::debug" "sekurlsa::logonpasswords" "exit"',
        description: "Enable debug privileges before extracting logon passwords.",
      },
      advanced: {
        command:
          'mimikatz "privilege::debug" "sekurlsa::logonpasswords" "lsadump::sam" "kerberos::list /export" "exit"',
        description: "Comprehensive credential extraction including SAM database and Kerberos tickets.",
      },
    },
    options: [
      {
        name: "command",
        type: "string",
        description: "Command to execute",
        placeholder: "sekurlsa::logonpasswords",
        required: true,
      },
    ],
    documentation: "https://github.com/gentilkiwi/mimikatz",
  },
  {
    name: "empire",
    description: "PowerShell post-exploitation framework",
    explanation:
      "Post-exploitation framework that utilizes PowerShell agents for Windows and Python agents for Linux/macOS.",
    examples: {
      simple: {
        command: "empire",
        description: "Start the Empire framework.",
      },
      intermediate: {
        command: "empire --resource setup_listener.rc",
        description: "Start Empire and execute commands from a resource file.",
      },
      advanced: {
        command: "empire --headless --username admin --password password",
        description: "Start Empire in headless mode with authentication for API access.",
      },
    },
    options: [
      {
        name: "resource",
        type: "string",
        description: "Read commands from resource file",
        placeholder: "commands.rc",
        common: true,
      },
      {
        name: "listener",
        type: "string",
        description: "Start a listener",
        placeholder: "http",
        common: true,
      },
    ],
    documentation: "https://github.com/BC-SECURITY/Empire",
  },
  {
    name: "pupy",
    description: "Cross-platform remote administration and post-exploitation tool",
    explanation: "Python-based RAT (Remote Administration Tool) with a wide range of post-exploitation capabilities.",
    examples: {
      simple: {
        command: "pupy",
        description: "Start the Pupy console.",
      },
      intermediate: {
        command: "pupy --listen ssl",
        description: "Start Pupy and listen for connections using SSL.",
      },
      advanced: {
        command: "pupy --listen ssl --workdir /opt/pupy --port 443",
        description: "Start Pupy with SSL, custom working directory, and specific port.",
      },
    },
    options: [
      {
        name: "listen",
        type: "string",
        description: "Listen for connection with a specific transport",
        placeholder: "ssl",
        common: true,
      },
      {
        name: "connect",
        type: "string",
        description: "Connect to a remote pupy server",
        placeholder: "192.168.1.100:443",
        common: true,
      },
    ],
    documentation: "https://github.com/n1nj4sec/pupy",
  },
]

